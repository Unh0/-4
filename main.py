import json, os
import pyttsx3, vosk, pyaudio, requests

tts = pyttsx3.init()
voices = tts.getProperty('voices')
tts.setProperty('voices', 'en')

for voice in voices:
    if voice.name == 'Microsoft David Desktop - English (UnitedStates)':
        tts.setProperty('voice', voice.id)
model = vosk.Model('vosk-model-small-ru-0.4')

record = vosk.KaldiRecognizer(model, 16000)
pa = pyaudio.PyAudio()
stream = pa.open(format=pyaudio.paInt16,
                 channels=1,
                 rate=16000,
                 input=True,
                 frames_per_buffer=8000)
stream.start_stream()


def listen():
    while True:
        data = stream.read(4000, exception_on_overflow=False)
        if record.AcceptWaveform(data) and len(data) > 0:
            answer = json.loads(record.Result())
            if answer['text']:
                yield answer['text']


def speak(say):
    tts.say(say)
    tts.runAndWait()


nebo = {"‚òÄ": '—Å–æ–ª–Ω–µ—á–Ω–æ', '‚òÅ': '–æ–±–ª–∞—á–Ω–æ', '‚òÇÔ∏è': '–¥–æ–∂–¥—å', '‚òÉÔ∏è': '—Å–Ω–µ–≥'}
veter = {'‚ÜëÔ∏è': '—Å–µ–≤–µ—Ä–Ω—ã–π', '‚Üó': '—Å–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π', '‚Üí': '–≤–æ—Å—Ç–æ—á–Ω—ã–π', '‚ÜòÔ∏è': '—é–≥–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π',
         '‚ÜìÔ∏è': '—é–∂–Ω—ã–π', '‚Üô': '—é–≥–æ-–∑–∞–ø–∞–¥–Ω—ã–π', 'Ô∏è‚Üê': '–∑–∞–ø–∞–¥–Ω—ã–π', '‚ÜñÔ∏è': '—Å–µ–≤–µ—Ä–æ-—é–∂–Ω—ã–π'}

def pogoda():
    req = requests.get('https://wttr.in/Saint-Petersburg?format=2')
    data = req.text
    # print(data[0])
    pog = {}
    for c in data:
        if c in nebo.keys():
            pog['–Ω–∞ —É–ª–∏—Ü–µ'] = nebo[c]
    pog['—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞'] = data[data.index('üå°Ô∏è') + 1:data.index('C')]
    pog['–≤–µ—Ç–µ—Ä'] = veter[data[data.index('C') + 4]]
    pog['—Å–∫–æ—Ä–æ—Å—Ç—å'] = data[data.index('C') + 5:data.index('k')]
    return pog


print('start')
pwd = ''
pog = pogoda()
for text in listen():
    if text == '–∑–∞–∫—Ä—ã—Ç—å':
        quit()
    elif text == '–ø–æ–≥–æ–¥–∞':
        pog = pogoda()
        print(str(pog) + " –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤ –≤ —á–∞—Å")
        speak(str(pog) + " –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤ –≤ —á–∞—Å")
    elif text == '–≤–µ—Ç–µ—Ä':
        pog = pogoda()
        print(pog['–≤–µ—Ç–µ—Ä'], pog['—Å–∫–æ—Ä–æ—Å—Ç—å'])
        speak("–≤–µ—Ç–µ—Ä —Å–µ–≥–æ–¥–Ω—è " + pog['–≤–µ—Ç–µ—Ä'] + "—Å–∫–æ—Ä–æ—Å—Ç—å" + pog['—Å–∫–æ—Ä–æ—Å—Ç—å'] + " –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤ –≤ —á–∞—Å")
    elif text == '–ø—Ä–æ–≥—É–ª–∫–∞':
        pog = pogoda()
        if int(pog['—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞'][1:-1]) < 5 or int(pog['—Å–∫–æ—Ä–æ—Å—Ç—å']) > 15:
            speak("–≥—É–ª—è—Ç—å –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è")
        else:
            speak("–≥—É–ª—è—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è")
    elif text == '—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å':
        pog = pogoda()
        with open('result.txt', 'w', encoding="utf-8") as f:
            f.write(requests.get('https://wttr.in/Saint-Petersburg?format=2').text)
            speak('–ø–æ–≥–æ–¥–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞')
    else:
        print(text)
